package Net::Async::Spotify::API::Generated::Episodes;

use strict;
use warnings;

use mro;
use parent qw(Net::Async::Spotify::API::Base);

use Future::AsyncAwait;

=head1 NAME
 
Net::Async::Spotify::API::Generated::Episodes - Package representing Spotify Episodes API
 
=head1 DESCRIPTION
 
Autogenerated module.
Based on https://developer.spotify.com/documentation/web-api/reference/#reference-index
Check C<crawl-api-doc.pl> for more information.
 
=head1 METHODS

=cut


=head2 get_an_episode

get_an_episode - Get an Episode

Get Spotify catalog information for a single episode identified by its
unique Spotify ID.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service:
see the <a href="/documentation/general/guides/authorization-guide/">Web API Authorization Guide</a>
for details.

=back

=head3 path_parameter

=over 4 

=item id

Type: string | Required: required
The <a href="/documentation/web-api/#spotify-uris-and-ids">Spotify ID</a> for the episode.

=back

=head3 query_parameter

=over 4 

=item market

Type: string | Required: optional
An <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a>.
If a country code is specified, only shows and episodes that are available in that market will be returned.<br />
If a valid user access token is specified in the request header, the country associated with
the user account will take priority over this parameter.<br />
<em>Note: If neither market or user country are provided, the content is considered unavailable for the client.</em><br />
Users can view the country that is associated with their account in the <a href="https://www.spotify.com/se/account/overview/">account settings</a>.

=back

and Response Objects being:

- episode object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200</code>
OK and the response body contains an <a href="/documentation/web-api/reference/#object-episodeobject">episode object</a>
in JSON format.<br />
On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a>
and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<br />
If an episode is unavailable in the given <code class="highlighter-rouge">market</code> the HTTP status code in the response header is <code class="highlighter-rouge">404</code> NOT FOUND.<a class="btn btn-sm btn-primary" href="/console/get-episode/?id=512ojhOuo1ktJprKbVcKyQ" target="_blank">Try in our Web Console</a>

=cut

async sub get_an_episode {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/episodes/{id}';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        path_parameter => {
            'id' => {
                type     => 'string',
                required => 'required',
            },
        },
        query_parameter => {
            'market' => {
                type     => 'string',
                required => 'optional',
            },
        },
    };
    my $response_objs = [
        'episode object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

=head2 get_multiple_episodes

get_multiple_episodes - Get Multiple Episodes

Get Spotify catalog information for several episodes based on their Spotify IDs.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service:
see the <a href="/documentation/general/guides/authorization-guide/">Web API Authorization Guide</a>
for details.

=back

=head3 query_parameter

=over 4 

=item ids

Type: string | Required: required
A comma-separated list of the <a href="/documentation/web-api/#spotify-uris-and-ids">Spotify IDs</a> for the episodes. Maximum: 50 IDs.

=item market

Type: string | Required: optional
An <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a>.
If a country code is specified, only shows and episodes that are available in that market will be returned.<br />
If a valid user access token is specified in the request header, the country associated with
the user account will take priority over this parameter.<br />
<em>Note: If neither market or user country are provided, the content is considered unavailable for the client.</em><br />
Users can view the country that is associated with their account in the <a href="https://www.spotify.com/se/account/overview/">account settings</a>.

=back

and Response Objects being:

- an object
- an object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200</code>
OK and the response body contains an object whose key is <code class="highlighter-rouge">episodes</code> and whose
value is an array of <a href="/documentation/web-api/reference/#object-episodeobject">episode objects</a>
in JSON format.Objects are returned in the order requested. If an object is not found, a <code class="highlighter-rouge">null</code> value is returned in the appropriate position.
Duplicate <code class="highlighter-rouge">ids</code> in the query will result in duplicate objects in the response. If an episode is unavailable in the given <code class="highlighter-rouge">market</code>, a <code class="highlighter-rouge">null</code> value is returned.
On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a> and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-several-episodes/?ids=77o6BIVlYM3msb4MMIL1jH,0Q86acNRm6V9GYx55SXKwf" target="_blank">Try in our Web Console</a>

=cut

async sub get_multiple_episodes {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/episodes';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        query_parameter => {
            'ids' => {
                type     => 'string',
                required => 'required',
            },
            'market' => {
                type     => 'string',
                required => 'optional',
            },
        },
    };
    my $response_objs = [
        'an object',
        'an object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

1;
