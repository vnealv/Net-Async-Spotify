package Net::Async::Spotify::API::Generated::Tracks;

use strict;
use warnings;

use mro;
use parent qw(Net::Async::Spotify::API::Base);

use Future::AsyncAwait;

=head1 NAME
 
Net::Async::Spotify::API::Generated::Tracks - Package representing Spotify Tracks API
 
=head1 DESCRIPTION
 
Autogenerated module.
Based on https://developer.spotify.com/documentation/web-api/reference/#reference-index
Check C<crawl-api-doc.pl> for more information.
 
=head1 METHODS

=cut


=head2 get_audio_analysis

get_audio_analysis - Get Audio Analysis for a Track

Get a detailed audio analysisÂ for a single track identified by its unique
Spotify ID.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details.

=back

=head3 path_parameter

=over 4 

=item id

Type: string | Required: required
The Spotify ID
for the track.

=back

and Response Objects being:

- analysis object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200 OK</code> and the response body contains an audio analysis object in JSON format. On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a> and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-audio-analysis-track/?id=06AKEBrKUckW0KREUWRnvT" target="_blank">Try in our Web Console</a>

=cut

async sub get_audio_analysis {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/audio-analysis/{id}';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        path_parameter => {
            'id' => {
                type     => 'string',
                required => 'required',
            },
        },
    };
    my $response_objs = [
        'analysis object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

=head2 get_audio_features

get_audio_features - Get Audio Features for a Track

Get audio feature information for a single track identified by its unique
Spotify ID.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details.

=back

=head3 path_parameter

=over 4 

=item id

Type: string | Required: required
The Spotify ID for the track.

=back

and Response Objects being:

- features object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200 OK</code> and the response body contains an <a href="/documentation/web-api/reference/#object-audiofeaturesobject">audio features object</a> in JSON format. On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a> and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-audio-features-track/?id=06AKEBrKUckW0KREUWRnvT" target="_blank">Try in our Web Console</a>

=cut

async sub get_audio_features {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/audio-features/{id}';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        path_parameter => {
            'id' => {
                type     => 'string',
                required => 'required',
            },
        },
    };
    my $response_objs = [
        'features object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

=head2 get_several_audio_features

get_several_audio_features - Get Audio Features for Several Tracks

Get audio features for multiple tracks based on their Spotify IDs.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service: see the Web API Authorization Guide for details.

=back

=head3 query_parameter

=over 4 

=item ids

Type: string | Required: required
A comma-separated list of the Spotify IDs
for the tracks. Maximum: 100 IDs.

=back

and Response Objects being:

- an object
- an object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200 OK</code>
and the response body contains an object whose key is <code class="highlighter-rouge">&quot;audio_features&quot;</code> and
whose value is an array of audio features objects in JSON format.Objects are returned in the order requested. If an object is not found, a <code class="highlighter-rouge">null</code> value is returned in the appropriate position. Duplicate <code class="highlighter-rouge">ids</code> in the query will result in duplicate objects in the response. On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a> and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-audio-features-several-tracks/?ids=4JpKVNYnVcJ8tuMKjAj50A,2NRANZE9UCmPAS5XVbXL40,24JygzOLM0EmRQeGtFcIcG" target="_blank">Try in our Web Console</a>

=cut

async sub get_several_audio_features {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/audio-features';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        query_parameter => {
            'ids' => {
                type     => 'string',
                required => 'required',
            },
        },
    };
    my $response_objs = [
        'an object',
        'an object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

=head2 get_several_tracks

get_several_tracks - Get Several Tracks

Get Spotify catalog information for multiple tracks based on their Spotify IDs.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service:
see the Web API Authorization Guide
for details.

=back

=head3 query_parameter

=over 4 

=item ids

Type: string | Required: required
A comma-separated list of the Spotify IDs for the tracks. Maximum: 50 IDs.

=item market

Type: string | Required: optional
An ISO 3166-1 alpha-2 country code or the string from_token. Provide this parameter if you want to apply Track Relinking.

=back

and Response Objects being:

- an object
- an object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200</code>
OK and the response body contains an object whose key is <code class="highlighter-rouge">tracks</code> and whose
value is an array of <a href="/documentation/web-api/reference/#object-trackobject">track objects</a>
in JSON format.Objects are returned in the order requested. If an object is not found, a <code class="highlighter-rouge">null</code> value is returned in the appropriate position. Duplicate <code class="highlighter-rouge">ids</code> in the query will result in duplicate objects in the response. On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a> and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-several-tracks/?ids=3n3Ppam7vgaVa1iaRUc9Lp,3twNvmDtFQtAd5gMKedhLD" target="_blank">Try in our Web Console</a>

=cut

async sub get_several_tracks {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/tracks';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        query_parameter => {
            'ids' => {
                type     => 'string',
                required => 'required',
            },
            'market' => {
                type     => 'string',
                required => 'optional',
            },
        },
    };
    my $response_objs = [
        'an object',
        'an object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

=head2 get_track

get_track - Get a Track

Get Spotify catalog information for a single track identified by its
unique Spotify ID.

with Request details being:

=head3 header

=over 4 

=item Authorization

Type: string | Required: required
A valid access token from the Spotify Accounts service:
see the Web API Authorization Guide
for details.

=back

=head3 path_parameter

=over 4 

=item id

Type: string | Required: required
The Spotify ID
for the track.

=back

=head3 query_parameter

=over 4 

=item market

Type: string | Required: optional
An ISO 3166-1 alpha-2 country code
or the string from_token. Provide this parameter if you want to apply Track
Relinking.

=back

and Response Objects being:

- track object


On success, the HTTP status code in the response header is <code class="highlighter-rouge">200</code>
OK and the response body contains a <a href="/documentation/web-api/reference/#object-trackobject">track object</a>
in JSON format. On error, the header status code is an <a href="/documentation/web-api/#response-status-codes">error code</a>
and the response body contains an <a href="/documentation/web-api/#response-schema">error object</a>.<a class="btn btn-sm btn-primary" href="/console/get-track/?id=3n3Ppam7vgaVa1iaRUc9Lp" target="_blank">Try in our Web Console</a>

=cut

async sub get_track {
    my ($self, %args) = @_;

    my $request->{method} = 'GET';
    $request->{uri}    = 'https://api.spotify.com/v1/tracks/{id}';
    $request->{param}  = {
        header => {
            'Authorization' => {
                type     => 'string',
                required => 'required',
            },
        },
        path_parameter => {
            'id' => {
                type     => 'string',
                required => 'required',
            },
        },
        query_parameter => {
            'market' => {
                type     => 'string',
                required => 'optional',
            },
        },
    };
    my $response_objs = [
        'track object',

    ];

    await $self->call_api($request, $response_objs, %args);
}

1;
